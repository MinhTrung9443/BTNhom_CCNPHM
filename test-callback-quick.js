// Quick test script for n8n callback endpoint
// Usage: node test-callback-quick.js <commentId>

const axios = require('axios');

const BACKEND_URL = process.env.BACKEND_URL || 'http://localhost:5000';
const commentId = process.argv[2];

if (!commentId) {
  console.error('‚ùå Error: Please provide a commentId');
  console.log('Usage: node test-callback-quick.js <commentId>');
  console.log('Example: node test-callback-quick.js 673f6f7a8b9c5d001a234567');
  process.exit(1);
}

async function testApproved() {
  console.log('üß™ Testing APPROVED callback...');
  console.log('Comment ID:', commentId);
  
  try {
    const response = await axios.post(
      `${BACKEND_URL}/api/webhooks/n8n/comment-result`,
      {
        commentId: commentId,
        status: 'approved',
        moderationNote: '‚úÖ Test callback - Comment h·ª£p l·ªá, kh√¥ng vi ph·∫°m quy ƒë·ªãnh'
      },
      {
        headers: { 'Content-Type': 'application/json' }
      }
    );
    
    console.log('‚úÖ Response status:', response.status);
    console.log('‚úÖ Response data:', JSON.stringify(response.data, null, 2));
  } catch (error) {
    console.error('‚ùå Error:', error.response?.data || error.message);
    console.error('Full error:', error.response?.status, error.response?.statusText);
  }
}

async function testRejected() {
  console.log('\nüß™ Testing REJECTED callback...');
  console.log('Comment ID:', commentId);
  
  try {
    const response = await axios.post(
      `${BACKEND_URL}/api/webhooks/n8n/comment-result`,
      {
        commentId: commentId,
        status: 'rejected',
        moderationNote: '‚ùå Test callback - Comment ch·ª©a n·ªôi dung kh√¥ng ph√π h·ª£p'
      },
      {
        headers: { 'Content-Type': 'application/json' }
      }
    );
    
    console.log('‚úÖ Response status:', response.status);
    console.log('‚úÖ Response data:', JSON.stringify(response.data, null, 2));
  } catch (error) {
    console.error('‚ùå Error:', error.response?.data || error.message);
    console.error('Full error:', error.response?.status, error.response?.statusText);
  }
}

async function testPending() {
  console.log('\nüß™ Testing PENDING callback...');
  console.log('Comment ID:', commentId);
  
  try {
    const response = await axios.post(
      `${BACKEND_URL}/api/webhooks/n8n/comment-result`,
      {
        commentId: commentId,
        status: 'pending',
        moderationNote: '‚è≥ Test callback - C·∫ßn xem x√©t th√™m'
      },
      {
        headers: { 'Content-Type': 'application/json' }
      }
    );
    
    console.log('‚úÖ Response status:', response.status);
    console.log('‚úÖ Response data:', JSON.stringify(response.data, null, 2));
    console.log('‚ö†Ô∏è  Note: PENDING status should NOT create notification');
  } catch (error) {
    console.error('‚ùå Error:', error.response?.data || error.message);
  }
}

async function runTests() {
  console.log('=====================================');
  console.log('üöÄ N8N Callback Endpoint Test');
  console.log('=====================================\n');
  
  await testApproved();
  await new Promise(resolve => setTimeout(resolve, 1000));
  
  await testRejected();
  await new Promise(resolve => setTimeout(resolve, 1000));
  
  await testPending();
  
  console.log('\n=====================================');
  console.log('‚úÖ All tests completed!');
  console.log('=====================================');
  console.log('\nüìã Next steps:');
  console.log('1. Check backend console for detailed logs');
  console.log('2. Check if user received notifications');
  console.log('3. Verify notifications in database');
}

runTests();
