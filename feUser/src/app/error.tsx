// app/dashboard/error.tsx
'use client'; // B·∫Øt bu·ªôc ph·∫£i l√† Client Component

import { useEffect } from 'react';

// ƒê·ªãnh nghƒ©a ki·ªÉu d·ªØ li·ªáu cho props c·ªßa component
type ErrorProps = {
  error: Error & { digest?: string }; // ƒê·ªëi t∆∞·ª£ng l·ªói, c√≥ th·ªÉ c√≥ th√™m thu·ªôc t√≠nh digest
  reset: () => void; // M·ªôt h√†m kh√¥ng c√≥ tham s·ªë v√† kh√¥ng tr·∫£ v·ªÅ g√¨, d√πng ƒë·ªÉ th·ª≠ render l·∫°i
};

export default function Error({ error, reset }: ErrorProps) {
  useEffect(() => {
    // Ghi l·∫°i l·ªói v√†o m·ªôt h·ªá th·ªëng gi√°m s√°t (v√≠ d·ª•: Sentry, LogRocket)
    // console.error an to√†n v·ªÅ ki·ªÉu d·ªØ li·ªáu v√¨ 'error' ch·∫Øc ch·∫Øn l√† m·ªôt ƒë·ªëi t∆∞·ª£ng Error
    console.error(error);
  }, [error]);

  return (
    <div>
      <h1>server ch∆∞a ch·∫°y or b·ªã l·ªói üöß</h1>
    </div>
  );
}